#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 25, 2019 02:00:28 AM +0100  platform: Windows NT
#    Dec 25, 2019 02:18:11 AM +0100  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

secret_word = "secret"
LIFE = 5
states = ["""
____
|(x_x)
| /|\\ GAME OVER
| / \\
""", """
____
|  O
| /|\\ 1 HP left
| 
""", """
____
|  O
|  |    2 HP left
|  
""", """
____
|  O
|       3 HP left
| 
""", """
____
|
|       4 HP left
|
""", """
You are OK 5 HP left
""",
          """
GG, YOU WON
"""
          ]


def set_Tk_var():
    global my_try, LIFE, GAMEOVER
    GAMEOVER = False
    LIFE = 5
    my_try = tk.StringVar()
    global result_word
    result_word = tk.StringVar()
    result_word.set('_ '*len(secret_word))

    global hangman_text
    hangman_text = tk.StringVar()
    hangman_text.set(states[LIFE])


def try_command():
    global my_try, LIFE
    global result_word, hangman_text, GAMEOVER
    # print('hangman_tcl_support.try_command', my_try.get(), result_word.get())
    mt = my_try.get()[0].lower()
    # print(mt)
    rw = result_word.get()
    if mt not in secret_word:
        LIFE -= 1
        hangman_text.set(states[LIFE])
        if LIFE < 1:
            GAMEOVER = True

    r = ''.join([(i+' ') if (mt == secret_word[ii]) else rw[2*ii:2*ii+2]
                 for ii, i in enumerate(secret_word)])
    if (''.join(r.split(' ')) == secret_word):
        hangman_text.set(states[6])
        GAMEOVER = True
    result_word.set(r)


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None


if __name__ == '__main__':
    import hangman_tcl
    hangman_tcl.vp_start_gui()
